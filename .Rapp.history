x
x <- c('a', 'b', 'c')
as.numeric(x)
as.logical(x)
as.complex(x)
x <- list(1, "a", TRUE, 1+4i)
x
print('sweeet')
m <- matrix(nrow=2, ncol=3)
m
dim(m)
attributes(m)
m <- 1:10
m
dim(m) <- c(2,5)
m
m <- 1:10
dim(m) <- (3,7)
dim(m) <- c(3,7)
dim(m) <- c(5,2)
m
x <- 1:3
y<- 10:12
rbing(x,y)
rbind(x,y)
cbind(x,y)
x <- 1:4
y <- 10:14
x
y
y <- 10:13
x
t
x
y
cbind(x,y)
rbind(x,y)
factor(c('male', 'female', 'male', 'female'))
x <- factor(c('male', 'female', 'male', 'female'))
table(x)
unclass(x)
x <- factor("yes", "yes", "no", "no")
table(x)
x <- factor(c("yes", "yes", "no", "no"))
x
table(x)
attr('levels')
arrt(,"levels")
x
attr(,"levels")
unclass(x)
x <- factor(c('yes', 'no', 'yes', 'no'),)
x <- factor(c('yes', 'no', 'yes', 'no'),#
levels = c('yes', 'no'))
x
unclass(x)
x <- factor(c('yes', 'no', 'yes', 'no'),#
levels = c('yes', 'no'))
x
unclass(x)
x <- c(1,2, NA, 10 , 2)
x
is.na(x)
is.nan(x)
x <- c(1,2, NaN, NA, 4)
is.na(x)
is.nan(x)
x <- data.frame(foo= 1:4, bar = c(T,T,F,F))
x
nrow(4)
nrow(x)
ncol(x)
row.name(x)
row.names
row.names(x)
read.table(x)
data.matrix(x)
x
x <- 1:3
names(x)
names(x) <- c('foo", 'bar', 'norf')
x
names(x) <- c('foo', 'bar', 'norf')
x
names(x)
x <- list(a=1, b='True', c=5.4)
x
m <- matrix(1:4, nrow=2, ncol=2)
dimnames(m) <- list(c('a','b'), c('c','d'))
m
data <- read.table('foo.txt')
y <- data.frame(a=1, b='a')
dput(y)
dput(y, file='y.R')
new.y <- dget('y.R')
new.y
x <- 'foo'
y <- data.frame(a=1, b='a')
dump(c('x','y', file='data.R'))
c
x
y
dump(c('x','y'), file = 'data.R')
rm(x,y)
source('data.R')
y
x
con <- url('http://www.google.com', 'r')
x <- readLines(con)
con <- url('http://www.jhsph.edu', 'r')
<- readLines(con)
x <- readLines(con)
head(x)
if(x>3) {}
if(x>3) { y <- 10}
x <- 4
if (x > 3) {}
if (x == 3) { y <- 10 } else {y <- 11}
if (x < 3) { y <- 10 } else {y <- 11}
if(x < 3) {y <- 10} else {y <- 11}
if(x < 3) {y <- 10} else {y <- 11}
y
y <- if(x> 3) {10} else {0}
y
for(i in 1:10) {print(i)}
count <- 0
while (count < 10) {}
count <- 0
while(count <10) {}
while(count <10) { 	print(count) 	count <- count + 1}
library.swirl
swirl.library
swirl()
library('swirl')
swirl()
TRUE == TRUE
FALSE == TRUE
(FALSE == TRUE ) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5==7)
FALSE & FALSE
TRIE & c(TRUE, FALSE, FALSE)
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE,FALSE, FALSE)
TRUE || c(TRUE,FALSE,FALSE)
5 > 8 || 6!=8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5==6, !FALSE)
ints <-sample(10)
ints
ints > 5
which()
which(ints > 7)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
c(4,5,10)
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11, num = 5)
remainder(4,div=2)
args(remainder)
submit()
evaluate(sd, c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[3]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram('Hello', 'Babestar')
submit()
mad_libs(Paris, sexy, chair)
mad_libs(c('Paris', 'sexy', 'chair'))
submit()
"I" %p% "love" %p% "R!"
library("swirl")
swirl()
d1 <- Sys.Date()
class(d1)
unclass(d1)
print(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.tim())
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- strptime("October 17, 1986 08:24")
t3 <- "October 17, 1986 08:24"
striptime(t3, "%B %s, %Y %H:%M")
strptime(t3, "%B %s, %Y %H:%M")
t4 <- strptime(t3, "%B %s, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() >t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
library('rJava')
library('xlsc')
library('xlsx')
GET https://github.com/login/oauth/authorize
library(httr)
oauth_endpoints("github")
my_app <- oauth_app("github",)
my_app <- oauth_app('github',)
read.csv()
sum(3,4)
with(airquality, plot(Wind, Ozone))
points(may$Wind,may$Ozone,col="blue",pch=17)
may <- subset(airquality, Month ==5)
points(may$Wind,may$Ozone,col="blue",pch=17)
points(notmay$Wind, notmay$Ozone, col = "red", pch = 8
)
notmay <- subset(airquality, Month != 5)
points(notmay$Wind, notmay$Ozone, col = "red", pch = 8
points(notmay$Wind, notmay$Ozone, col = "red", pch = 8)
sessionInfo()
?objectcode()
list.files()
setwd("Documents/R_Gym")
list.files()
objectcode("cachematrix.R")
runcode("cachematrix.R")
source("cachematrix.R")
loadcache()
